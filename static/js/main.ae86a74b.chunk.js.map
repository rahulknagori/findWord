{"version":3,"sources":["components/Form/Form.module.css","components/UI/Input.module.css","components/UI/Card.module.css","components/Content/Content.module.css","components/UI/Input.js","components/UI/Card.js","components/Form/Form.js","components/Content/Content.js","App.js","index.js"],"names":["module","exports","Input","props","className","classes","inputDiv","ref","Ref","onChange","onchange","input","value","Card","card","children","Form","useState","findInput","setFindInput","replaceInput","setReplaceInput","showReplaceInputBtn","setReplaceInputBtn","findWordInputFieldRef","useRef","replaceWordInputFieldRef","document","onkeydown","event","ctrlKey","which","current","focus","select","Fragment","length","warning","cardHeight","onSubmit","preventDefault","formInputValue","form","replaceBtn","onClick","prevValue","arrow","target","id","type","placeholder","findBtn","Content","content","initialValue","App","setValue","isMatching","SetIsMatching","returnedSearchValue","returnedReplaceContentValue","splitSearchIntialValue","split","RegExp","higlightValue","map","each","i","style","toLowerCase","backgroundColor","replaceWord","replace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ae86a74b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"card\":\"Form_card__iebyv\",\"cardHeight\":\"Form_cardHeight__3n7d4\",\"input\":\"Form_input__2ESfd\",\"replaceBtn\":\"Form_replaceBtn__1Gygf\",\"findBtn\":\"Form_findBtn__3j9oQ\",\"warning\":\"Form_warning__3E1ji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputDiv\":\"Input_inputDiv__1SxEW\",\"input\":\"Input_input__2swPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3FZEj\"};","import classes from \"./Input.module.css\"\n\nconst Input = (props)=>{\n\n    return (\n    <div className = {classes.inputDiv}>\n        <input ref={props.Ref} onChange={props.onchange} className={classes.input} {...props.input} value = {props.value}></input>\n    </div>)\n}\n\nexport default Input;","import classes from \"./Card.module.css\";\n\nconst Card = (props)=>{\n    return <div className = {`${classes.card} ${props.className}`}>{props.children}</div>\n}\n\nexport default Card;","import Input from \"../UI/Input\";\nimport classes from \"./Form.module.css\";\nimport Card from \"../UI/Card\";\nimport React, {useRef, useState} from \"react\";\n\nconst Form = (props) => {\n    //Controlled Input Fields START\n    const [findInput, setFindInput] = useState(\"\");\n    const [replaceInput, setReplaceInput] = useState(\"\");\n    //Controlled Input Fields END\n\n    // button to toggle the Find and Replace button START\n    const [showReplaceInputBtn, setReplaceInputBtn] = useState(false)\n    // button to toggle the Find and Replace button END\n    const findWordInputFieldRef = useRef();\n    const replaceWordInputFieldRef = useRef();\n\n    const showReplaceInputHandler = () =>{\n        setReplaceInputBtn(prevValue => !prevValue)\n    }\n\n    const inputOnChangeHandler = (event) =>{\n       setFindInput(event.target.value);\n    }\n\n    const replaceOnChangeHandler = (event)=> {\n       setReplaceInput(event.target.value);\n    }\n\n    const onSubmitHandler = (event) =>{\n        event.preventDefault()\n        props.formInputValue(findInput, replaceInput);\n    }\n\n    // short cut button feature\n    document.onkeydown = checkShortcuts;\n    function checkShortcuts(event){\n        if(event.ctrlKey && event.which === 191){\n            findWordInputFieldRef.current.focus()\n            findWordInputFieldRef.current.select()\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {findInput.length < 1 && <h4 className={classes.warning}>Enter a Search Term</h4>}\n            <Card className={!showReplaceInputBtn ? classes.card: classes.cardHeight}>\n        <form onSubmit={onSubmitHandler} className = {classes.form}>\n            <div className={classes.replaceBtn} onClick = {showReplaceInputHandler}>{!showReplaceInputBtn? <span className = {classes.arrow}>&#8595;</span>:<span className = {classes.arrow}>&#8593;</span> }</div>\n            <div className={classes.input}>\n            <Input value = {findInput} Ref={findWordInputFieldRef} onchange = {inputOnChangeHandler} input={\n            { id:\"1\",\n                type:\"text\",\n                placeholder: \"Search Word\" }\n            }/>\n            {showReplaceInputBtn && <Input value = {replaceInput} Ref={replaceWordInputFieldRef}\n            onchange = {replaceOnChangeHandler}\n            input={\n            { id:\"2\",\n                type:\"text\",\n                placeholder: \"Replace word\" }\n            }/>}\n            {showReplaceInputBtn && <button className={classes.findBtn} type=\"submit\">Find and Replace</button>}\n            </div>\n            {!showReplaceInputBtn && <button className={classes.findBtn} type=\"submit\">Find</button>}\n        </form>\n    </Card>   \n        </React.Fragment>\n\n     \n    )\n}\n\nexport default Form;","import Card from \"../UI/Card\";\nimport classes from \"./Content.module.css\"\n\n\nconst Content = (props)=>{\n    return <Card className={classes.content}><div>{props.value}</div></Card>\n}\n\n\nexport default Content;","import Form from \"./components/Form/Form\";\nimport Content from \"./components/Content/Content\";\nimport React, {useState} from \"react\";\nimport \"./App.css\"\n\nconst initialValue = \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"\n\nfunction App() {\n    const [value, setValue] = useState(initialValue)\n    const [isMatching, SetIsMatching] = useState(true)\n\n    // finding Word, hightlight Word, Replace Word functionalities START\n    const onFormInputValueChange = (returnedSearchValue, returnedReplaceContentValue) => {\n\n      const splitSearchIntialValue = initialValue.split(new RegExp(`(\\\\b${returnedSearchValue}\\\\b)`, 'gi'));\n      //highlighting Word\n      if(returnedReplaceContentValue.length < 1){\n        const higlightValue =  <span>{ splitSearchIntialValue.map((each, i) => \n          <span key={i} style={each.toLowerCase() === returnedSearchValue.toLowerCase() ? { backgroundColor: 'red'} : {} }>{ each}</span>)} </span>;\n          setValue(higlightValue)\n        }\n\n        //  if value is not found then display \"Not found\" START\n        const checkIsMatching = splitSearchIntialValue.map(each => each.toLowerCase() === returnedSearchValue.toLowerCase()) \n        if(checkIsMatching.length === 1){\n          SetIsMatching(false)\n        } else {\n          SetIsMatching(true)\n        }\n        // display \"Not found\" End\n\n        // Find and Replace functionality START\n        if(returnedSearchValue.length > 0 && returnedReplaceContentValue.length > 0){\n        const replaceWord = initialValue.replace(new RegExp(`\\\\b${returnedSearchValue}\\\\b`, \"gi\"), returnedReplaceContentValue)\n        setValue(replaceWord)\n        }\n        // Find and Replace functionality End\n    }\n\n  return (\n    <div>\n      {!isMatching && <h3 className=\"warning\">Word Not Found</h3>}\n      <Form formInputValue = {onFormInputValueChange} isMatching = {isMatching} />\n      <Content value={value}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}